name: Build (MSVC)

on: [push, pull_request]

jobs:
  Build:
    name: ${{ matrix.platform.name }}
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        platform:
        - { name: Windows (x64),          flags: -A x64,   project: VisualC/SDL.sln, projectflags: '/p:Platform=x64', artifact: Release/SDL2.dll, artifact-name: SDL2_gcc_x64.dll }
        - { name: Windows (x86),          flags: -A Win32, project: VisualC/SDL.sln, projectflags: '/p:Platform=Win32', artifact: Release/SDL2.dll, artifact-name: SDL2_gcc_x86.dll }
        - { name: Windows (clang-cl x64), flags: -T ClangCL -A x64, artifact: Release/SDL2.dll, artifact-name: SDL2_clang_x64.dll }
        - { name: Windows (clang-cl x86), flags: -T ClangCL -A Win32, artifact: Release/SDL2.dll, artifact-name: SDL2_clang_x86.dll }
        - { name: Windows (ARM64),        flags: -A ARM64, artifact: Release/SDL2.dll, artifact-name: SDL2_arm_x64.dll }
        - { name: UWP (x64),              flags: -A x64 -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION="10.0" -DSDL_TEST=OFF, project: VisualC-WinRT/SDL-UWP.sln, projectflags: '/p:Platform=x64 /p:WindowsTargetPlatformVersion=10.0.17763.0', artifact: Release/SDL2.dll, artifact-name: SDL2_uwp_x64.dll }

    steps:
    - uses: actions/checkout@v2
    - name: Configure CMake
      run: cmake -B build -DSDL_TEST=ON ${{ matrix.platform.flags }}
    - name: Build CMake
      run: cmake --build build/ --config Release --parallel

    - name: Add msbuild to PATH
      if: ${{ matrix.platform.project != '' }}
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Build msbuild
      if: ${{ matrix.platform.project != '' }}
      run: msbuild ${{ matrix.platform.project }} /m /p:BuildInParallel=true /p:Configuration=Release ${{ matrix.platform.projectflags }}

    # Upload the created artifact
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        path: build/${{ matrix.platform.artifact }}
        name: ${{ matrix.platform.artifact-name }}
